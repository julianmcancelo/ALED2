/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package beltran;
import Materias.CarrerasPanel;
import Materias.MateriaService;

import beltran.ServicioLogin.RolUsuario;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLightLaf;
import java.awt.Image;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import beltran.Clases.SessionManager;

/**
 *
 * @author julia
 */
public class Principal extends javax.swing.JFrame {
    private String usuario;
    private ServicioLogin.RolUsuario rolUsuario;
    private boolean isDarkTheme = false;  // Controlar el estado del tema
    private String nombreCompleto;  // Variable para almacenar el nombre completo

 private void actualizarTitulo() {
    // Formatear la fecha actual
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    String fechaActual = sdf.format(new Date());

    // Crear el título con el nombre del usuario, fecha y rol
    String rol = (rolUsuario == ServicioLogin.RolUsuario.ADMINISTRADOR) ? "Administrador" : "Usuario";
    String titulo = String.format("Nombre: %s | Usuario: %s | Fecha: %s | Rol: %s", nombreCompleto, usuario, fechaActual, rol);

    // Establecer el título de la ventana
    setTitle(titulo);
}
     public Principal(String nombreCompleto, String usuario, ServicioLogin.RolUsuario rolUsuario) {
        if (!SessionManager.isLoggedIn) {
            JOptionPane.showMessageDialog(this, "Debes iniciar sesión para acceder a esta sección.");
            dispose();
            new InicioSesion().setVisible(true);
            return;
        }

        this.nombreCompleto = nombreCompleto;
        this.usuario = usuario;
        this.rolUsuario = rolUsuario;
        initComponents();
        ajustarInterfazSegunRol();
        actualizarTitulo();

        try {
            UIManager.setLookAndFeel(isDarkTheme ? new FlatDarkLaf() : new FlatLightLaf());
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }

        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

  private void ajustarInterfazSegunRol() {
        if (rolUsuario == RolUsuario.ADMINISTRADOR) {
            // Mostrar elementos específicos para administradores
            jEAlumnos.setVisible(true); // Hacer visible el menú de Alumnos para administradores
            jAdministrador.setVisible(true);
        } else {
            // Ocultar elementos específicos para usuarios regulares
            jEAlumnos.setVisible(false); // Ocultar el menú de Alumnos para usuarios regulares
            jAdministrador.setVisible(false);
        }
    }
    
    
    
 private void cambiarTema() {
        isDarkTheme = !isDarkTheme;
        try {
            UIManager.setLookAndFeel(isDarkTheme ? new FlatDarkLaf() : new FlatLightLaf());
            javax.swing.SwingUtilities.updateComponentTreeUI(this);  // Actualizar la UI
        } catch (UnsupportedLookAndFeelException e) {
            e.printStackTrace();
        }
    }
 
 
 
 private void ajustarIcono() {
        // Cargar la imagen
        ImageIcon icon = new ImageIcon(getClass().getResource("/beltran/images/footer.png"));
        
        // Redimensionar la imagen para ajustarse al tamaño del JLabel
        Image img = icon.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
        icon = new ImageIcon(img);
        
        // Establecer el icono en el JLabel
        jLabel1.setIcon(icon);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCambiartema = new javax.swing.JButton();
        btnAdmin = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jEAlumnos = new javax.swing.JMenuItem();
        jmRegistroAlumnos = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        txtCambiarContraseña = new javax.swing.JMenuItem();
        CerrarSesion = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        gCarreras = new javax.swing.JMenuItem();
        gMaterias = new javax.swing.JMenuItem();
        jMComision = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jAdministrador = new javax.swing.JMenu();
        jmCrearUsuario = new javax.swing.JMenuItem();
        jmAcerca = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnCambiartema.setText("☾ / ☀");
        btnCambiartema.setToolTipText("Modo Oscuro / Claro");
        btnCambiartema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiartemaActionPerformed(evt);
            }
        });

        btnAdmin.setText("Administracion");
        btnAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminActionPerformed(evt);
            }
        });

        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jLabel1.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/beltran/images/footer.png"))); // NOI18N
        jLabel1.setEnabled(false);
        jLabel1.setMaximumSize(new java.awt.Dimension(500, 200));
        jLabel1.setMinimumSize(new java.awt.Dimension(500, 200));
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 200));

        jMenu1.setText("Archivo");

        jMenu3.setText("Alumnos");

        jEAlumnos.setText("Edición de Alumnos");
        jEAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEAlumnosActionPerformed(evt);
            }
        });
        jMenu3.add(jEAlumnos);

        jmRegistroAlumnos.setText("Registrar Alumnos");
        jmRegistroAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmRegistroAlumnosActionPerformed(evt);
            }
        });
        jMenu3.add(jmRegistroAlumnos);

        jMenuItem1.setText("Control de Asistencia");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);

        jMenu1.add(jMenu3);

        txtCambiarContraseña.setText("Cambiar Contraseña");
        txtCambiarContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCambiarContraseñaActionPerformed(evt);
            }
        });
        jMenu1.add(txtCambiarContraseña);

        CerrarSesion.setText("Cerrar Sesion");
        CerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarSesionActionPerformed(evt);
            }
        });
        jMenu1.add(CerrarSesion);

        jMenuBar1.add(jMenu1);

        jMenu4.setText("Carreras");

        gCarreras.setText("Gestión Carreras");
        gCarreras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gCarrerasActionPerformed(evt);
            }
        });
        jMenu4.add(gCarreras);

        gMaterias.setText("Gestión Materias");
        gMaterias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gMateriasActionPerformed(evt);
            }
        });
        jMenu4.add(gMaterias);

        jMComision.setText("Gestión Comisiones");
        jMComision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMComisionActionPerformed(evt);
            }
        });
        jMenu4.add(jMComision);

        jMenuBar1.add(jMenu4);

        jMenu2.setText("Opciones");

        jAdministrador.setText("Administrador");

        jmCrearUsuario.setText("Crear Usuario");
        jmCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCrearUsuarioActionPerformed(evt);
            }
        });
        jAdministrador.add(jmCrearUsuario);

        jMenu2.add(jAdministrador);

        jmAcerca.setText("Acerca De");
        jmAcerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmAcercaActionPerformed(evt);
            }
        });
        jMenu2.add(jmAcerca);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnCambiartema)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1483, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdmin)
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCambiartema)
                    .addComponent(btnAdmin))
                .addGap(71, 71, 71))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmAcercaActionPerformed
          // Crea un mensaje en formato HTML para mostrar la información en un diálogo

String mensaje = """
<html>
  <body style='width: 400px; font-family: Arial, sans-serif; text-align: center;'>
    <h2 style='color: #2c3e50; margin-bottom: 10px;'>Acerca de la Aplicación</h2>
    <p style='font-size: 15px; color: #34495e;'>Proyecto académico desarrollado en <strong>Java</strong>.</p>
    
    <hr style='border: none; height: 1px; background-color: #bdc3c7; margin: 10px 0;'>

    <p><strong>Alumno:</strong> Cancelo Julián Manuel</p>
    <p><strong>Curso:</strong> 2do Año - 1era TN</p>
    <p><strong>Programa:</strong> Analista de Sistemas</p>

    <hr style='border: none; height: 1px; background-color: #bdc3c7; margin: 10px 0;'>

    <p><strong>Profesora:</strong> Gabriela Tajes</p>
    <p><strong>Materia:</strong> Algoritmos y Estructura de Datos</p>
    <p><strong>Evaluación:</strong> Segundo Parcial y Examen Final</p>

    <hr style='border: none; height: 1px; background-color: #bdc3c7; margin: 10px 0;'>

    <p><strong>Institución:</strong> Instituto Beltrán</p>
    <p style='font-size: 14px; color: #34495e;'>Gracias por utilizar nuestra aplicación.</p>

    <p style='font-size: 12px; font-style: italic; color: #7f8c8d;'>© 2024 Cancelo Julián Manuel. Todos los derechos reservados.</p>
  </body>
</html>
""";

// Muestra el diálogo con la información
JOptionPane.showMessageDialog(
    null, mensaje, "Acerca de la Aplicación", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jmAcercaActionPerformed

    private void btnCambiartemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiartemaActionPerformed
                cambiarTema();  // Llamar al método cambiarTema al hacer clic

    }//GEN-LAST:event_btnCambiartemaActionPerformed

    private void txtCambiarContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCambiarContraseñaActionPerformed

    }//GEN-LAST:event_txtCambiarContraseñaActionPerformed

    private void btnAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminActionPerformed
  // Crear una nueva instancia de Administracion y mostrarla
      if (rolUsuario != RolUsuario.ADMINISTRADOR) {
        // Si no tiene permisos, muestra un mensaje de error
        JOptionPane.showMessageDialog(this, 
            "No tiene permisos para acceder a esta función.", 
            "Acceso Denegado", 
            JOptionPane.ERROR_MESSAGE);
        return; // Salir del método para evitar que se ejecute el código adicional
    }
    // Hacer visible la ventana 
    
        Administracion admin = new Administracion();
        admin.setVisible(true);    }//GEN-LAST:event_btnAdminActionPerformed

    private void jEAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEAlumnosActionPerformed
  // Crear una nueva instancia de SeleccionarAlumno
    SeleccionarAlumno seleccionarAlumno = new SeleccionarAlumno();

    // Mostrar la ventana de SeleccionarAlumno
    seleccionarAlumno.setVisible(true);    }//GEN-LAST:event_jEAlumnosActionPerformed

    private void jmCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCrearUsuarioActionPerformed
  // Verifica si el rol del usuario no es ADMINISTRADOR
    if (rolUsuario != RolUsuario.ADMINISTRADOR) {
        // Si no tiene permisos, muestra un mensaje de error
        JOptionPane.showMessageDialog(this, 
            "No tiene permisos para acceder a esta función.", 
            "Acceso Denegado", 
            JOptionPane.ERROR_MESSAGE);
        return; // Salir del método para evitar que se ejecute el código adicional
    }
    
    // Si el usuario es administrador, se puede abrir la ventana CrearUsuario
    CrearUsuario crearUsuario = new CrearUsuario();
    crearUsuario.setVisible(true); // Hacer visible la ventana de CrearUsuario
    
    // Aquí va el código que debe ejecutarse si el usuario es administrador
    // TODO add your handling code here:
    }//GEN-LAST:event_jmCrearUsuarioActionPerformed

    private void jmRegistroAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmRegistroAlumnosActionPerformed
   // Crea una instancia del formulario RegistroAlumnos
    RegistroALumnos registroAlumnos = new RegistroALumnos();
    
    // Configura la ventana para que esté visible
    registroAlumnos.setVisible(true);    }//GEN-LAST:event_jmRegistroAlumnosActionPerformed

    private void CerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarSesionActionPerformed
    // Cierra la ventana principal
    this.dispose(); 

    // Muestra la ventana de inicio de sesión
    java.awt.EventQueue.invokeLater(() -> {
        InicioSesion inicioSesion = new InicioSesion();
        inicioSesion.setVisible(true);
    });
    }//GEN-LAST:event_CerrarSesionActionPerformed

    private void gMateriasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gMateriasActionPerformed

    }//GEN-LAST:event_gMateriasActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
 MateriaService materiaService = new MateriaService();
    AsistenciaPanel asistenciaPanel = new AsistenciaPanel(materiaService);
    
    JFrame frame = new JFrame("Gestión de Asistencia");
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    frame.setSize(800, 600);
    frame.add(asistenciaPanel);
    frame.setVisible(true);
       }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMComisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMComisionActionPerformed
      // Crear una instancia de CrearComisionFrame
    CrearComisionFrame crearComisionFrame = new CrearComisionFrame();
    
    // Hacer visible el frame
    crearComisionFrame.setVisible(true);
    
 
    }//GEN-LAST:event_jMComisionActionPerformed

    private void gCarrerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gCarrerasActionPerformed
MateriaService materiaService = new MateriaService();

        // Crear el JFrame principal
        JFrame mainFrame = new JFrame("Gestión de Carreras");
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainFrame.setSize(800, 600);

        // Crear un JDesktopPane
        JDesktopPane desktopPane = new JDesktopPane();
        mainFrame.add(desktopPane);

        // Crear un JInternalFrame para CarrerasPanel
        JInternalFrame gestionCarrerasFrame = new JInternalFrame("Gestión de Carreras", true, true, true, true);
        CarrerasPanel gestionCarrerasPanel = new CarrerasPanel(materiaService);
        gestionCarrerasFrame.add(gestionCarrerasPanel);
        gestionCarrerasFrame.setSize(600, 400);
        gestionCarrerasFrame.setVisible(true); // Hacer visible el JInternalFrame

        // Añadir el JInternalFrame al JDesktopPane
        desktopPane.add(gestionCarrerasFrame);

        // Hacer visible el JFrame principal
        mainFrame.setVisible(true);    }//GEN-LAST:event_gCarrerasActionPerformed
     
    /**
     * @param args the command line arguments
     */

     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CerrarSesion;
    private javax.swing.JButton btnAdmin;
    private javax.swing.JButton btnCambiartema;
    private javax.swing.JMenuItem gCarreras;
    private javax.swing.JMenuItem gMaterias;
    private javax.swing.JMenu jAdministrador;
    private javax.swing.JMenuItem jEAlumnos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMComision;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jmAcerca;
    private javax.swing.JMenuItem jmCrearUsuario;
    private javax.swing.JMenuItem jmRegistroAlumnos;
    private javax.swing.JMenuItem txtCambiarContraseña;
    // End of variables declaration//GEN-END:variables

}