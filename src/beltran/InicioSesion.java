
package beltran;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import beltran.Clases.ServicioLogin;
import beltran.Clases.ServicioLogin.SessionManager;
import beltran.Clases.VentanaUtils;
import javax.swing.JOptionPane;
import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author julia
 */
public class InicioSesion extends javax.swing.JFrame {
private final ServicioLogin servicioLogin;
    /**
     * Creates new form Login
     */
    public InicioSesion() {
        initComponents();
        servicioLogin = new ServicioLogin();
        configurarEventos();
        centrarVentana();  // Centrar la ventana
   // Intentar cargar la imagen
        ImageIcon icon = new ImageIcon(getClass().getResource("img/icono.png"));

        // Verificar si la imagen se ha cargado correctamente
        if (icon.getImageLoadStatus() != java.awt.MediaTracker.COMPLETE) {
            System.err.println("No se pudo cargar la imagen: /beltran/Img/icono.png");
        } else {
            // Ajustar la imagen al tamaño del JLabel
            Image img = icon.getImage().getScaledInstance(lblIcono.getWidth(), lblIcono.getHeight(), Image.SCALE_SMOOTH);
            icon = new ImageIcon(img);
            lblIcono.setIcon(icon);
            

        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsuario = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JPasswordField();
        btnIniciarSesion = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        lblIcono = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnIniciarSesion.setText("Iniciar Sesion");

        jLabel1.setText("Usuario");

        jLabel2.setText("Contraseña");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblIcono.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblIcono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/beltran/images/footer.png"))); // NOI18N
        lblIcono.setText("Logito");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIniciarSesion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblIcono, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblIcono, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciarSesion)
                    .addComponent(btnCancelar))
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
            int option = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea cancelar el inicio de sesión?", "Confirmar Cancelación", JOptionPane.YES_NO_OPTION);
    if (option == JOptionPane.YES_OPTION) {
        // Cerrar la aplicación
        System.exit(0);
    } else {
        // Regresar al inicio de sesión (no hace nada, simplemente cierra el diálogo)
    }// TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    
    
    /**
     * Configura los eventos de los botones.
     */
   private void configurarEventos() {
        btnIniciarSesion.addActionListener(evt -> verificarLogin());
        btnCancelar.addActionListener(evt -> cancelarInicioSesion());
    }
    
    
    
      private void centrarVentana() {
        VentanaUtils.centrarVentana(this);  // Usar el método de la clase utilitaria
    }
       private void verificarLogin() {
        String usuario = txtUsuario.getText();
        String contrasena = new String(txtContrasena.getPassword());

        ServicioLogin.ResultadoAutenticacion resultado = servicioLogin.autenticar(usuario, contrasena);
        if (resultado != null) {
            String nombreCompleto = resultado.getNombreCompleto();
            ServicioLogin.RolUsuario rolUsuario = resultado.getRolUsuario();
            JOptionPane.showMessageDialog(this, "¡Bienvenido, " + nombreCompleto + "!");
            
            // Establecer que el usuario ha iniciado sesión
            SessionManager.isLoggedIn = true;
            
            abrirVentanaPrincipal(nombreCompleto, usuario, rolUsuario);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrectos.");
        }
    }
private void abrirVentanaPrincipal(String nombreCompleto, String usuario, ServicioLogin.RolUsuario rolUsuario) {
    Principal ventanaPrincipal = new Principal(nombreCompleto, usuario, rolUsuario);
    ventanaPrincipal.setVisible(true);
}
    
 private void cancelarInicioSesion() {
        int opcion = JOptionPane.showConfirmDialog(this, "¿Está seguro de que desea cancelar el inicio de sesión?", "Confirmar Cancelación", JOptionPane.YES_NO_OPTION);
        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }






       public static void main(String[] args) {
       // Configurar el tema FlatLaf
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
        } catch (UnsupportedLookAndFeelException e) {
            JOptionPane.showMessageDialog(null, "Error al configurar el tema: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        java.awt.EventQueue.invokeLater(() -> new InicioSesion().setVisible(true));
    
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblIcono;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

       public enum RolUsuario {
        ADMINISTRADOR, USUARIO;

        public static RolUsuario fromString(String rol) {
            switch (rol) {
                case "Administrador":
                    return ADMINISTRADOR;
                case "Usuario":
                    return USUARIO;
                default:
                    throw new IllegalArgumentException("Rol desconocido: " + rol);
            }
        }
    }
}